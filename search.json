[{"path":"https://adbi.r-dbi.org/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (https://www.contributor-covenant.org), version 1.0.0, available https://contributor-covenant.org/version/1/0/0/.","code":""},{"path":"https://adbi.r-dbi.org/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to adbi","title":"Contributing to adbi","text":"outlines propose change adbi.","code":""},{"path":"https://adbi.r-dbi.org/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to adbi","text":"Small typos grammatical errors documentation may edited directly using GitHub web interface, long changes made source file. YES: edit roxygen comment .R file R/. : edit .Rd file man/.","code":""},{"path":"https://adbi.r-dbi.org/CONTRIBUTING.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"Contributing to adbi","text":"make substantial pull request, always file issue make sure someone team agrees ’s problem. ’ve found bug, create associated issue illustrate bug minimal reprex.","code":""},{"path":"https://adbi.r-dbi.org/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"","what":"Pull request process","title":"Contributing to adbi","text":"recommend create Git branch pull request (PR). Look Travis AppVeyor build status making changes. README contain badges continuous integration services used package. use roxygen2, Markdown syntax, documentation. use testthat. Contributions test cases included easier accept. Please update NEWS.md.","code":""},{"path":"https://adbi.r-dbi.org/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to adbi","text":"Please note adbi project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://adbi.r-dbi.org/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU Lesser General Public License","title":"GNU Lesser General Public License","text":"Version 2.1, February 1999Copyright © 1991, 1999 Free Software Foundation, Inc.51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA Everyone permitted copy distribute verbatim copies license document, changing allowed. first released version Lesser GPL. also counts successor GNU Library Public License, version 2, hence version number 2.1.","code":""},{"path":"https://adbi.r-dbi.org/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU Lesser General Public License","text":"licenses software designed take away freedom share change . contrast, GNU General Public Licenses intended guarantee freedom share change free software–make sure software free users. license, Lesser General Public License, applies specially designated software packages–typically libraries–Free Software Foundation authors decide use . can use , suggest first think carefully whether license ordinary General Public License better strategy use particular case, based explanations . speak free software, referring freedom use, price. General Public Licenses designed make sure freedom distribute copies free software (charge service wish); receive source code can get want ; can change software use pieces new free programs; informed can things. protect rights, need make restrictions forbid distributors deny rights ask surrender rights. restrictions translate certain responsibilities distribute copies library modify . example, distribute copies library, whether gratis fee, must give recipients rights gave . must make sure , , receive can get source code. link code library, must provide complete object files recipients, can relink library making changes library recompiling . must show terms know rights. protect rights two-step method: (1) copyright library, (2) offer license, gives legal permission copy, distribute /modify library. protect distributor, want make clear warranty free library. Also, library modified someone else passed , recipients know original version, original author’s reputation affected problems might introduced others. Finally, software patents pose constant threat existence free program. wish make sure company effectively restrict users free program obtaining restrictive license patent holder. Therefore, insist patent license obtained version library must consistent full freedom use specified license. GNU software, including libraries, covered ordinary GNU General Public License. license, GNU Lesser General Public License, applies certain designated libraries, quite different ordinary General Public License. use license certain libraries order permit linking libraries non-free programs. program linked library, whether statically using shared library, combination two legally speaking combined work, derivative original library. ordinary General Public License therefore permits linking entire combination fits criteria freedom. Lesser General Public License permits lax criteria linking code library. call license “Lesser” General Public License Less protect user’s freedom ordinary General Public License. also provides free software developers Less advantage competing non-free programs. disadvantages reason use ordinary General Public License many libraries. However, Lesser license provides advantages certain special circumstances. example, rare occasions, may special need encourage widest possible use certain library, becomes de-facto standard. achieve , non-free programs must allowed use library. frequent case free library job widely used non-free libraries. case, little gain limiting free library free software , use Lesser General Public License. cases, permission use particular library non-free programs enables greater number people use large body free software. example, permission use GNU C Library non-free programs enables many people use whole GNU operating system, well variant, GNU/Linux operating system. Although Lesser General Public License Less protective users’ freedom, ensure user program linked Library freedom wherewithal run program using modified version Library. precise terms conditions copying, distribution modification follow. Pay close attention difference “work based library” “work uses library”. former contains code derived library, whereas latter must combined library order run.","code":""},{"path":"https://adbi.r-dbi.org/LICENSE.html","id":"terms-and-conditions-for-copying-distribution-and-modification","dir":"","previous_headings":"","what":"TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION","title":"GNU Lesser General Public License","text":"0. License Agreement applies software library program contains notice placed copyright holder authorized party saying may distributed terms Lesser General Public License (also called “License”). licensee addressed “”. “library” means collection software functions /data prepared conveniently linked application programs (use functions data) form executables. “Library”, , refers software library work distributed terms. “work based Library” means either Library derivative work copyright law: say, work containing Library portion , either verbatim modifications /translated straightforwardly another language. (Hereinafter, translation included without limitation term “modification”.) “Source code” work means preferred form work making modifications . library, complete source code means source code modules contains, plus associated interface definition files, plus scripts used control compilation installation library. Activities copying, distribution modification covered License; outside scope. act running program using Library restricted, output program covered contents constitute work based Library (independent use Library tool writing ). Whether true depends Library program uses Library . 1. may copy distribute verbatim copies Library’s complete source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice disclaimer warranty; keep intact notices refer License absence warranty; distribute copy License along Library. may charge fee physical act transferring copy, may option offer warranty protection exchange fee. 2. may modify copy copies Library portion , thus forming work based Library, copy distribute modifications work terms Section 1 , provided also meet conditions: ) modified work must software library. b) must cause files modified carry prominent notices stating changed files date change. c) must cause whole work licensed charge third parties terms License. d) facility modified Library refers function table data supplied application program uses facility, argument passed facility invoked, must make good faith effort ensure , event application supply function table, facility still operates, performs whatever part purpose remains meaningful. (example, function library compute square roots purpose entirely well-defined independent application. Therefore, Subsection 2d requires application-supplied function table used function must optional: application supply , square root function must still compute square roots.) requirements apply modified work whole. identifiable sections work derived Library, can reasonably considered independent separate works , License, terms, apply sections distribute separate works. distribute sections part whole work based Library, distribution whole must terms License, whose permissions licensees extend entire whole, thus every part regardless wrote . Thus, intent section claim rights contest rights work written entirely ; rather, intent exercise right control distribution derivative collective works based Library. addition, mere aggregation another work based Library Library (work based Library) volume storage distribution medium bring work scope License. 3. may opt apply terms ordinary GNU General Public License instead License given copy Library. , must alter notices refer License, refer ordinary GNU General Public License, version 2, instead License. (newer version version 2 ordinary GNU General Public License appeared, can specify version instead wish.) make change notices. change made given copy, irreversible copy, ordinary GNU General Public License applies subsequent copies derivative works made copy. option useful wish copy part code Library program library. 4. may copy distribute Library (portion derivative , Section 2) object code executable form terms Sections 1 2 provided accompany complete corresponding machine-readable source code, must distributed terms Sections 1 2 medium customarily used software interchange. distribution object code made offering access copy designated place, offering equivalent access copy source code place satisfies requirement distribute source code, even though third parties compelled copy source along object code. 5. program contains derivative portion Library, designed work Library compiled linked , called “work uses Library”. work, isolation, derivative work Library, therefore falls outside scope License. However, linking “work uses Library” Library creates executable derivative Library (contains portions Library), rather “work uses library”. executable therefore covered License. Section 6 states terms distribution executables. “work uses Library” uses material header file part Library, object code work may derivative work Library even though source code . Whether true especially significant work can linked without Library, work library. threshold true precisely defined law. object file uses numerical parameters, data structure layouts accessors, small macros small inline functions (ten lines less length), use object file unrestricted, regardless whether legally derivative work. (Executables containing object code plus portions Library still fall Section 6.) Otherwise, work derivative Library, may distribute object code work terms Section 6. executables containing work also fall Section 6, whether linked directly Library . 6. exception Sections , may also combine link “work uses Library” Library produce work containing portions Library, distribute work terms choice, provided terms permit modification work customer’s use reverse engineering debugging modifications. must give prominent notice copy work Library used Library use covered License. must supply copy License. work execution displays copyright notices, must include copyright notice Library among , well reference directing user copy License. Also, must one things: ) Accompany work complete corresponding machine-readable source code Library including whatever changes used work (must distributed Sections 1 2 ); , work executable linked Library, complete machine-readable “work uses Library”, object code /source code, user can modify Library relink produce modified executable containing modified Library. (understood user changes contents definitions files Library necessarily able recompile application use modified definitions.) b) Use suitable shared library mechanism linking Library. suitable mechanism one (1) uses run time copy library already present user’s computer system, rather copying library functions executable, (2) operate properly modified version library, user installs one, long modified version interface-compatible version work made . c) Accompany work written offer, valid least three years, give user materials specified Subsection 6a, , charge cost performing distribution. d) distribution work made offering access copy designated place, offer equivalent access copy specified materials place. e) Verify user already received copy materials already sent user copy. executable, required form “work uses Library” must include data utility programs needed reproducing executable . However, special exception, materials distributed need include anything normally distributed (either source binary form) major components (compiler, kernel, ) operating system executable runs, unless component accompanies executable. may happen requirement contradicts license restrictions proprietary libraries normally accompany operating system. contradiction means use Library together executable distribute. 7. may place library facilities work based Library side--side single library together library facilities covered License, distribute combined library, provided separate distribution work based Library library facilities otherwise permitted, provided two things: ) Accompany combined library copy work based Library, uncombined library facilities. must distributed terms Sections . b) Give prominent notice combined library fact part work based Library, explaining find accompanying uncombined form work. 8. may copy, modify, sublicense, link , distribute Library except expressly provided License. attempt otherwise copy, modify, sublicense, link , distribute Library void, automatically terminate rights License. However, parties received copies, rights, License licenses terminated long parties remain full compliance. 9. required accept License, since signed . However, nothing else grants permission modify distribute Library derivative works. actions prohibited law accept License. Therefore, modifying distributing Library (work based Library), indicate acceptance License , terms conditions copying, distributing modifying Library works based . 10. time redistribute Library (work based Library), recipient automatically receives license original licensor copy, distribute, link modify Library subject terms conditions. may impose restrictions recipients’ exercise rights granted herein. responsible enforcing compliance third parties License. 11. , consequence court judgment allegation patent infringement reason (limited patent issues), conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. distribute satisfy simultaneously obligations License pertinent obligations, consequence may distribute Library . example, patent license permit royalty-free redistribution Library receive copies directly indirectly , way satisfy License refrain entirely distribution Library. portion section held invalid unenforceable particular circumstance, balance section intended apply, section whole intended apply circumstances. purpose section induce infringe patents property right claims contest validity claims; section sole purpose protecting integrity free software distribution system implemented public license practices. Many people made generous contributions wide range software distributed system reliance consistent application system; author/donor decide willing distribute software system licensee impose choice. section intended make thoroughly clear believed consequence rest License. 12. distribution /use Library restricted certain countries either patents copyrighted interfaces, original copyright holder places Library License may add explicit geographical distribution limitation excluding countries, distribution permitted among countries thus excluded. case, License incorporates limitation written body License. 13. Free Software Foundation may publish revised /new versions Lesser General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Library specifies version number License applies “later version”, option following terms conditions either version later version published Free Software Foundation. Library specify license version number, may choose version ever published Free Software Foundation. 14. wish incorporate parts Library free programs whose distribution conditions incompatible , write author ask permission. software copyrighted Free Software Foundation, write Free Software Foundation; sometimes make exceptions . decision guided two goals preserving free status derivatives free software promoting sharing reuse software generally.","code":""},{"path":"https://adbi.r-dbi.org/LICENSE.html","id":"no-warranty","dir":"","previous_headings":"","what":"NO WARRANTY","title":"GNU Lesser General Public License","text":"15. LIBRARY LICENSED FREE CHARGE, WARRANTY LIBRARY, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE LIBRARY “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE LIBRARY . LIBRARY PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION. 16. EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MAY MODIFY /REDISTRIBUTE LIBRARY PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE LIBRARY (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE LIBRARY OPERATE SOFTWARE), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES. END TERMS CONDITIONS","code":""},{"path":"https://adbi.r-dbi.org/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-libraries","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Libraries","title":"GNU Lesser General Public License","text":"develop new library, want greatest possible use public, recommend making free software everyone can redistribute change. can permitting redistribution terms (, alternatively, terms ordinary General Public License). apply terms, attach following notices library. safest attach start source file effectively convey exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. also get employer (work programmer) school, , sign “copyright disclaimer” library, necessary. sample; alter names: ’s !","code":"<one line to give the library's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version.  This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.  You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA Yoyodyne, Inc., hereby disclaims all copyright interest in the library `Frob' (a library for tweaking knobs) written by James Random Hacker.  <signature of Ty Coon>, 1 April 1990 Ty Coon, President of Vice"},{"path":"https://adbi.r-dbi.org/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nicolas Bennett. Author, maintainer. Voltron Data. Funder.","code":""},{"path":"https://adbi.r-dbi.org/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bennett N (2024). adbi: 'DBI' Compliant Database Access Using 'ADBC'. R package version 0.1.1, https://github.com/r-dbi/adbi, https://arrow.apache.org/adbc/, https://adbi.r-dbi.org.","code":"@Manual{,   title = {adbi: 'DBI' Compliant Database Access Using 'ADBC'},   author = {Nicolas Bennett},   year = {2024},   note = {R package version 0.1.1, https://github.com/r-dbi/adbi, https://arrow.apache.org/adbc/},   url = {https://adbi.r-dbi.org}, }"},{"path":"https://adbi.r-dbi.org/index.html","id":"adbi","dir":"","previous_headings":"","what":"DBI Compliant Database Access Using ADBC","title":"DBI Compliant Database Access Using ADBC","text":"Bringing arrow-adbc R via DBI, adbi aims provide DBI-compliant database access.","code":""},{"path":"https://adbi.r-dbi.org/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"DBI Compliant Database Access Using ADBC","text":"can install development version adbi GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"r-dbi/adbi\")"},{"path":"https://adbi.r-dbi.org/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"DBI Compliant Database Access Using ADBC","text":"data.frame API DBI supported. interestingly, recent arrow-extension API DBI supported well.","code":"library(DBI)  # Create an SQLite connection using the adbcsqlite backend con <- dbConnect(adbi::adbi(\"adbcsqlite\"), uri = \":memory:\")  # Write a table dbWriteTable(con, \"swiss\", datasets::swiss)  # Query it dbGetQuery(con, \"SELECT * from swiss WHERE Agriculture < 40\") #>    Fertility Agriculture Examination Education Catholic Infant.Mortality #> 1       80.2        17.0          15        12     9.96             22.2 #> 2       92.5        39.7           5         5    93.40             20.2 #> 3       85.8        36.5          12         7    33.77             20.3 #> 4       76.1        35.3           9         7    90.57             26.6 #> 5       71.7        34.0          17         8     3.30             20.0 #> 6       55.7        19.4          26        28    12.11             20.2 #> 7       54.3        15.2          31        20     2.15             10.8 #> 8       58.3        26.8          25        19    18.46             20.9 #> 9       70.4        38.4          26        12     5.62             20.3 #> 10      65.7         7.7          29        11    13.79             20.5 #> 11      72.7        16.7          22        13    11.22             18.9 #> 12      64.4        17.6          35        32    16.92             23.0 #> 13      77.6        37.6          15         7     4.97             20.0 #> 14      67.6        18.7          25         7     8.65             19.5 #> 15      35.0         1.2          37        53    42.34             18.0 #> 16      42.8        27.7          22        29    58.33             19.3  # Prepared statements res <- dbSendQuery(con, \"SELECT * from swiss WHERE Agriculture < ?\")  dbBind(res, 30) dbFetch(res) #>    Fertility Agriculture Examination Education Catholic Infant.Mortality #> 1       80.2        17.0          15        12     9.96             22.2 #> 2       55.7        19.4          26        28    12.11             20.2 #> 3       54.3        15.2          31        20     2.15             10.8 #> 4       58.3        26.8          25        19    18.46             20.9 #> 5       65.7         7.7          29        11    13.79             20.5 #> 6       72.7        16.7          22        13    11.22             18.9 #> 7       64.4        17.6          35        32    16.92             23.0 #> 8       67.6        18.7          25         7     8.65             19.5 #> 9       35.0         1.2          37        53    42.34             18.0 #> 10      42.8        27.7          22        29    58.33             19.3  dbBind(res, 20) dbFetch(res) #>   Fertility Agriculture Examination Education Catholic Infant.Mortality #> 1      80.2        17.0          15        12     9.96             22.2 #> 2      55.7        19.4          26        28    12.11             20.2 #> 3      54.3        15.2          31        20     2.15             10.8 #> 4      65.7         7.7          29        11    13.79             20.5 #> 5      72.7        16.7          22        13    11.22             18.9 #> 6      64.4        17.6          35        32    16.92             23.0 #> 7      67.6        18.7          25         7     8.65             19.5 #> 8      35.0         1.2          37        53    42.34             18.0  # Cleanup dbClearResult(res) # Queries dbGetQueryArrow(con, \"SELECT * from swiss WHERE Agriculture < 40\") #> <nanoarrow_array_stream struct<Fertility: double, Agriculture: double, Examination: int64, Education: int64, Catholic: double, Infant.Mortality: double>> #>  $ get_schema:function ()   #>  $ get_next  :function (schema = x$get_schema(), validate = TRUE)   #>  $ release   :function ()  # Prepared statements res <- dbSendQueryArrow(con, \"SELECT * from swiss WHERE Agriculture < ?\")  dbBind(res, 30)  ret <- dbFetchArrow(res) ret$length #> NULL  dbBind(res, 20)  # Chunked fetches while (!dbHasCompleted(res)) {   ret <- dbFetchArrowChunk(res)   message(\"fetched \", ret$length, \" rows\") } #> fetched 8 rows #> fetched 0 rows  # Cleanup dbClearResult(res) dbDisconnect(con)"},{"path":"https://adbi.r-dbi.org/reference/AdbiConnection-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class AdbiConnection (and methods) — AdbiConnection-class","title":"Class AdbiConnection (and methods) — AdbiConnection-class","text":"AdbiConnection objects created passing adbi() first argument DBI::dbConnect(). superclass DBIConnection class. \"Usage\" section lists class methods overridden adbi.","code":""},{"path":"https://adbi.r-dbi.org/reference/AdbiConnection-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class AdbiConnection (and methods) — AdbiConnection-class","text":"","code":"# S4 method for AdbiConnection dbAppendTable(conn, name, value, ..., row.names = NULL)  # S4 method for AdbiConnection dbBegin(conn, ...)  # S4 method for AdbiConnection dbCommit(conn, ...)  # S4 method for AdbiConnection dbDataType(dbObj, obj, ...)  # S4 method for AdbiConnection,Id dbExistsTable(conn, name, ...)  # S4 method for AdbiConnection,SQL dbExistsTable(conn, name, ...)  # S4 method for AdbiConnection,character dbExistsTable(conn, name, ...)  # S4 method for AdbiConnection dbGetInfo(dbObj, ...)  # S4 method for AdbiConnection dbIsValid(dbObj, ...)  # S4 method for AdbiConnection,Id dbListFields(conn, name, ...)  # S4 method for AdbiConnection,SQL dbListFields(conn, name, ...)  # S4 method for AdbiConnection,character dbListFields(conn, name, ...)  # S4 method for AdbiConnection dbListTables(conn, ...)  # S4 method for AdbiConnection,character dbQuoteIdentifier(conn, x, ...)  # S4 method for AdbiConnection,character dbQuoteLiteral(conn, x, ...)  # S4 method for AdbiConnection,character dbQuoteString(conn, x, ...)  # S4 method for AdbiConnection,character dbRemoveTable(conn, name, ..., temporary = FALSE, fail_if_missing = TRUE)  # S4 method for AdbiConnection,Id dbRemoveTable(conn, name, ..., temporary = FALSE, fail_if_missing = TRUE)  # S4 method for AdbiConnection dbRollback(conn, ...)  # S4 method for AdbiConnection dbUnquoteIdentifier(conn, x, ...)  # S4 method for AdbiConnection,Id,data.frame dbWriteTable(   conn,   name,   value,   overwrite = FALSE,   append = FALSE,   ...,   field.types = NULL,   row.names = NULL,   temporary = FALSE )  # S4 method for AdbiConnection,SQL,data.frame dbWriteTable(conn, name, value, ...)  # S4 method for AdbiConnection,character,data.frame dbWriteTable(conn, name, value, ...)  # S4 method for AdbiConnection show(object)"},{"path":"https://adbi.r-dbi.org/reference/AdbiConnection-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class AdbiConnection (and methods) — AdbiConnection-class","text":"conn DBIConnection object, returned dbConnect(). name table name, passed dbQuoteIdentifier(). Options : character string unquoted DBMS table name, e.g. \"table_name\", call Id() components fully qualified table name, e.g. Id(schema = \"my_schema\", table = \"table_name\") call SQL() quoted fully qualified table name given verbatim, e.g. SQL('\"my_schema\".\"table_name\"') value data.frame (coercible data.frame). ... parameters passed methods. row.names logical specifying whether row.names output output DBMS table; TRUE, extra field whose name whatever R identifier \"row.names\" maps DBMS (see DBI::make.db.names()). NA add rows names characters, otherwise ignore. dbObj object inheriting DBIDriver DBIConnection obj R object whose SQL type want determine. x character vector, SQL Id object quote identifier. temporary logical specifying whether new table temporary. default FALSE. fail_if_missing FALSE, dbRemoveTable() succeeds table exist. overwrite Allow overwriting destination table. TRUE append also TRUE. append Allow appending destination table. TRUE overwrite also TRUE. field.types character vector named SQL field types names names new table's columns. missing, types inferred DBI::dbDataType()). object R object","code":""},{"path":[]},{"path":"https://adbi.r-dbi.org/reference/AdbiDriver-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class AdbiDriver (and methods) — AdbiDriver-class","title":"Class AdbiDriver (and methods) — AdbiDriver-class","text":"AdbiDriver objects created adbi(), used select correct method dbConnect(). superclass DBIDriver class, used purely dispatch. \"Usage\" section lists class methods overridden adbi.","code":""},{"path":"https://adbi.r-dbi.org/reference/AdbiDriver-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class AdbiDriver (and methods) — AdbiDriver-class","text":"","code":"# S4 method for AdbiDriver dbDataType(dbObj, obj, ...)  # S4 method for AdbiDriver dbGetInfo(dbObj, ...)  # S4 method for AdbiDriver dbIsValid(dbObj, ...)  # S4 method for AdbiDriver show(object)"},{"path":"https://adbi.r-dbi.org/reference/AdbiDriver-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class AdbiDriver (and methods) — AdbiDriver-class","text":"dbObj object inheriting DBIDriver DBIConnection obj R object whose SQL type want determine. ... arguments passed methods. object R object","code":""},{"path":"https://adbi.r-dbi.org/reference/AdbiResult-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class AdbiResult (and methods) — AdbiResult-class","title":"Class AdbiResult (and methods) — AdbiResult-class","text":"AdbiResult objects created DBI::dbSendQuery() DBI::dbSendStatement(), encapsulate result SQL statement (either SELECT ). superclass DBIResult class. \"Usage\" section lists class methods overridden adbi.","code":""},{"path":"https://adbi.r-dbi.org/reference/AdbiResult-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class AdbiResult (and methods) — AdbiResult-class","text":"","code":"# S4 method for AdbiResult dbBindArrow(res, params, ...)  # S4 method for AdbiResult dbBind(res, params, ...)  # S4 method for AdbiResult dbClearResult(res, ...)  # S4 method for AdbiResult dbColumnInfo(res, ...)  # S4 method for AdbiResult dbGetRowCount(res, ...)  # S4 method for AdbiResult dbGetRowsAffected(res, ...)  # S4 method for AdbiResult dbGetStatement(res, ...)  # S4 method for AdbiResult dbHasCompleted(res, ...)  # S4 method for AdbiResult dbIsValid(dbObj, ...)  # S4 method for AdbiResult show(object)"},{"path":"https://adbi.r-dbi.org/reference/AdbiResult-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class AdbiResult (and methods) — AdbiResult-class","text":"res object inheriting DBIResult. params dbBind(), list values, named unnamed, data frame, one element/column per query parameter. dbBindArrow(), values nanoarrow stream, one column per query parameter. ... arguments passed methods. dbObj object inheriting DBIObject, .e. DBIDriver, DBIConnection, DBIResult object R object","code":""},{"path":[]},{"path":"https://adbi.r-dbi.org/reference/AdbiResultArrow-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class AdbiResultArrow (and methods) — AdbiResultArrow-class","title":"Class AdbiResultArrow (and methods) — AdbiResultArrow-class","text":"AdbiResultArrow objects created DBI::dbSendQueryArrow(), encapsulate result SQL query (SELECT statement). superclass DBIResultArrow class. \"Usage\" section lists class methods overridden adbi.","code":""},{"path":"https://adbi.r-dbi.org/reference/AdbiResultArrow-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class AdbiResultArrow (and methods) — AdbiResultArrow-class","text":"","code":"# S4 method for AdbiResultArrow dbBindArrow(res, params, ...)  # S4 method for AdbiResultArrow dbBind(res, params, ...)  # S4 method for AdbiResultArrow dbClearResult(res, ...)  # S4 method for AdbiResultArrow dbColumnInfo(res, ...)  # S4 method for AdbiResultArrow dbFetchArrowChunk(res, ...)  # S4 method for AdbiResultArrow dbFetchArrow(res, ...)  # S4 method for AdbiResultArrow dbGetRowCount(res, ...)  # S4 method for AdbiResultArrow dbGetRowsAffected(res, ...)  # S4 method for AdbiResultArrow dbGetStatement(res, ...)  # S4 method for AdbiResultArrow dbHasCompleted(res, ...)  # S4 method for AdbiResultArrow dbIsValid(dbObj, ...)  # S4 method for AdbiResultArrow show(object)"},{"path":"https://adbi.r-dbi.org/reference/AdbiResultArrow-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class AdbiResultArrow (and methods) — AdbiResultArrow-class","text":"res object inheriting DBIResult. params dbBind(), list values, named unnamed, data frame, one element/column per query parameter. dbBindArrow(), values nanoarrow stream, one column per query parameter. ... arguments passed methods. dbObj object inheriting DBIObject, .e. DBIDriver, DBIConnection, DBIResult object R object","code":""},{"path":[]},{"path":"https://adbi.r-dbi.org/reference/adbi-package.html","id":null,"dir":"Reference","previous_headings":"","what":"adbi: 'DBI' Compliant Database Access Using 'ADBC' — adbi-package","title":"adbi: 'DBI' Compliant Database Access Using 'ADBC' — adbi-package","text":"order make Arrow Database Connectivity ('ADBC' https://arrow.apache.org/adbc/) accessible R, interface compliant 'DBI' package provided, using driver back-ends implemented 'adbcdrivermanager' framework. enables interacting database systems using Arrow data format, thereby offering efficient alternative 'ODBC' analytical applications.","code":""},{"path":[]},{"path":"https://adbi.r-dbi.org/reference/adbi-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"adbi: 'DBI' Compliant Database Access Using 'ADBC' — adbi-package","text":"Maintainer: Nicolas Bennett nicolas@cynkra.com contributors: Voltron Data [funder]","code":""},{"path":"https://adbi.r-dbi.org/reference/dbConnect.html","id":null,"dir":"Reference","previous_headings":"","what":"Adbi driver — adbi","title":"Adbi driver — adbi","text":"order open database connection, DBI::dbConnect() dispatches driver object, can instantiated calling adbi().","code":""},{"path":"https://adbi.r-dbi.org/reference/dbConnect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adbi driver — adbi","text":"","code":"adbi(driver = NA_character_)  # S4 method for AdbiDriver dbConnect(drv, ..., bigint = NULL)  # S4 method for AdbiConnection dbDisconnect(conn, force = getOption(\"adbi.force_close_results\", FALSE), ...)"},{"path":"https://adbi.r-dbi.org/reference/dbConnect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adbi driver — adbi","text":"driver driver specification can evaluated (arguments) give adbcdrivermanager::adbc_driver(). See Details information. drv object inherits DBIDriver, existing DBIConnection object (order clone existing connection). ... Extra arguments passed dbConnect() forwarded adbcdrivermanager::adbc_database_init() bigint R type 64-bit integer types mapped , default bit64::integer64, bit64 installed character otherwise conn DBIConnection object, returned dbConnect(). force Close open results disconnecting","code":""},{"path":"https://adbi.r-dbi.org/reference/dbConnect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adbi driver — adbi","text":"connection object (S4 class AdbiCOnnection, inheriting DBIConnection) returned dbConnect(), dbDisconnect() returns TRUE invisibly.","code":""},{"path":"https://adbi.r-dbi.org/reference/dbConnect.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adbi driver — adbi","text":"specify type adbc driver, adbi accepts driver argument object inheriting adbc_driver, function can evaluated arguments returns object inheriting adbc_driver, string form pkg::fun (pkg:: optional defaults fun), can used look function. default, adbcdrivermanager::adbc_driver_monkey() object created.","code":""},{"path":"https://adbi.r-dbi.org/reference/dbConnect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adbi driver — adbi","text":"","code":"adbi() #> <AdbiDriver> #>   Type: <adbc_driver_monkey> if (requireNamespace(\"adbcsqlite\")) {   adbi(\"adbcsqlite\") } #> Loading required namespace: adbcsqlite #> <AdbiDriver> #>   Type: <adbcsqlite_driver_sqlite> library(DBI) con <- dbConnect(adbi()) dbIsValid(con) #> [1] TRUE dbDisconnect(con) dbIsValid(con) #> [1] FALSE"},{"path":"https://adbi.r-dbi.org/reference/dbFetch.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch result sets — dbFetch_AdbiResult","title":"Fetch result sets — dbFetch_AdbiResult","text":"fetching results using dbFetch(), argument n can specified control chunk size per fetching operation. default value -1 corresponds retrieving entire result set , positive integer try returning many rows (long n exceed available number rows), line standard DBI expectations. data transfer mediated Arrow data structures, retrieved array chunks, underlying chunk size can used passing n value NA.","code":""},{"path":"https://adbi.r-dbi.org/reference/dbFetch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch result sets — dbFetch_AdbiResult","text":"","code":"# S4 method for AdbiResult dbFetch(res, n = -1, ...)"},{"path":"https://adbi.r-dbi.org/reference/dbFetch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch result sets — dbFetch_AdbiResult","text":"res object inheriting DBIResult, created dbSendQuery(). n maximum number records retrieve per fetch. Use n = -1 n = Inf retrieve pending records.  implementations may recognize special values. ... arguments passed methods.","code":""},{"path":"https://adbi.r-dbi.org/reference/dbFetch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch result sets — dbFetch_AdbiResult","text":"data.frame requested number rows (zero rows dbFetch() called result set remaining rows).","code":""},{"path":"https://adbi.r-dbi.org/reference/dbFetch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetch result sets — dbFetch_AdbiResult","text":"","code":"if (requireNamespace(\"adbcsqlite\")) {   library(DBI)   con <- dbConnect(adbi::adbi(\"adbcsqlite\"), uri = \":memory:\")   dbWriteTable(con, \"swiss\", swiss)   res <- dbSendQuery(con, \"SELECT * from swiss WHERE Agriculture < 30\")   dbFetch(res)   dbClearResult(res)   dbDisconnect(con) }"},{"path":"https://adbi.r-dbi.org/reference/dbSendQuery.html","id":null,"dir":"Reference","previous_headings":"","what":"Create result sets — dbSendQueryArrow_AdbiConnection","title":"Create result sets — dbSendQueryArrow_AdbiConnection","text":"Creating result sets using dbSendQuery() (extension using dbGetQuery()) mostly follows DBI specification. One way adbi deviates DBI mechanisms bigint setting per connection, per-connection setting can overridden result set basis. default, connection setting applied, passing one accepted values bigint creating result set subsequently use setting fetches using result set.","code":""},{"path":"https://adbi.r-dbi.org/reference/dbSendQuery.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create result sets — dbSendQueryArrow_AdbiConnection","text":"","code":"# S4 method for AdbiConnection dbSendQueryArrow(   conn,   statement,   ...,   params = NULL,   immediate = NULL,   bigint = NULL )  # S4 method for AdbiConnection,character dbSendQuery(   conn,   statement,   ...,   params = NULL,   immediate = NULL,   bigint = NULL )  # S4 method for AdbiConnection,character dbSendStatement(   conn,   statement,   ...,   params = NULL,   immediate = NULL,   bigint = NULL )"},{"path":"https://adbi.r-dbi.org/reference/dbSendQuery.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create result sets — dbSendQueryArrow_AdbiConnection","text":"conn DBIConnection object, returned dbConnect(). statement character string containing SQL. ... parameters passed methods. params Optional query parameters (forwarded dbBind()) immediate Passing value TRUE intended statements containing placeholders FALSE otherwise. default value NULL inspect statement presence placeholders (PREPARE statement) bigint R type 64-bit integer types mapped , default chosen according connection setting","code":""},{"path":"https://adbi.r-dbi.org/reference/dbSendQuery.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create result sets — dbSendQueryArrow_AdbiConnection","text":"S4 class AdbiResult (inheriting DBIResult).","code":""},{"path":"https://adbi.r-dbi.org/reference/dbSendQuery.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create result sets — dbSendQueryArrow_AdbiConnection","text":"Multiple open result sets per connection supported support can disabled setting options(adbi.allow_multiple_results = FALSE). enabled, creating new result finalize potential results throw warning.","code":""},{"path":[]},{"path":"https://adbi.r-dbi.org/reference/dbSendQuery.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create result sets — dbSendQueryArrow_AdbiConnection","text":"","code":"if (requireNamespace(\"adbcsqlite\")) {   library(DBI)   con <- dbConnect(adbi::adbi(\"adbcsqlite\"), uri = \":memory:\")   dbWriteTable(con, \"swiss\", swiss)   str(     dbGetQuery(con, \"SELECT Examination from swiss WHERE Agriculture < 30\")   )   str(     dbGetQuery(con, \"SELECT Examination from swiss WHERE Agriculture < 30\",       bigint = \"integer\")   )   dbDisconnect(con) } #> 'data.frame':\t10 obs. of  1 variable: #>  $ Examination: int  15 26 31 25 29 22 35 25 37 22 #> 'data.frame':\t10 obs. of  1 variable: #>  $ Examination: int  15 26 31 25 29 22 35 25 37 22"},{"path":"https://adbi.r-dbi.org/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. DBI dbCanConnect, Id","code":""},{"path":"https://adbi.r-dbi.org/security.html","id":null,"dir":"","previous_headings":"","what":"Process for reporting security vulnerabilities","title":"Process for reporting security vulnerabilities","text":"reporting security vulnerability, please e-mail package maintainer nicolas@cynkra.com instructions. include confidential information e-mail.","code":""},{"path":"https://adbi.r-dbi.org/news/index.html","id":"adbi-011-2024-01-25","dir":"Changelog","previous_headings":"","what":"adbi 0.1.1 (2024-01-25)","title":"adbi 0.1.1 (2024-01-25)","text":"Update adbcdrivermanager 0.9.0.1","code":""},{"path":"https://adbi.r-dbi.org/news/index.html","id":"adbi-010-2023-12-21","dir":"Changelog","previous_headings":"","what":"adbi 0.1.0 (2023-12-21)","title":"adbi 0.1.0 (2023-12-21)","text":"Update DBI 1.2.0 Adds arrow API extension","code":""},{"path":"https://adbi.r-dbi.org/news/index.html","id":"adbi-002-2023-12-08","dir":"Changelog","previous_headings":"","what":"adbi 0.0.2 (2023-12-08)","title":"adbi 0.0.2 (2023-12-08)","text":"Initial CRAN release","code":""},{"path":"https://adbi.r-dbi.org/news/index.html","id":"adbi-001-2023-12-07","dir":"Changelog","previous_headings":"","what":"adbi 0.0.1 (2023-12-07)","title":"adbi 0.0.1 (2023-12-07)","text":"Target DBI 1.1.3","code":""}]
